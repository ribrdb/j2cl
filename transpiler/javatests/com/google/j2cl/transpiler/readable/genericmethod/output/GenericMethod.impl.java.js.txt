goog.module('com.google.j2cl.transpiler.readable.genericmethod.GenericMethod$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.$1$impl');
let $1LocalClass = goog.forwardDeclare('com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.$1LocalClass$impl');
let Container = goog.forwardDeclare('com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.Container$impl');
let Content = goog.forwardDeclare('com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.Content$impl');
let SuperContainer = goog.forwardDeclare('com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.SuperContainer$impl');
let Error = goog.forwardDeclare('java.lang.Error$impl');
let Exception = goog.forwardDeclare('java.lang.Exception$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @template T
 */
class GenericMethod extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @template T
   * @return {!GenericMethod<T>}
   * @public
   */
  static $create__() {
    GenericMethod.$clinit();
    let $instance = new GenericMethod();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @template T_1, S
   * @param {T_1} f
   * @param {S} s
   * @return {void}
   * @public
   */
  m_foo__java_lang_Object__java_lang_Object(f, s) {}

  /**
   * @param {*} o
   * @return {void}
   * @public
   */
  m_fun__java_lang_Object(o) {}

  /**
   * @template T_1
   * @param {T_1} t
   * @return {void}
   * @public
   */
  m_fun__java_lang_Exception(t) {}

  /**
   * @template T_1
   * @param {T_1} t
   * @return {void}
   * @public
   */
  m_fun__java_lang_Error(t) {
    $1.$create__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod(
        this);
    $1LocalClass
        .$create__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod(
            this);
  }

  /**
   * @template T_1
   * @return {GenericMethod<T_1>}
   * @public
   */
  m_bar__() {
    return null;
  }

  /**
   * @template T_1
   * @param {Array<T_1>} array
   * @return {Array<T_1>}
   * @public
   */
  m_fun__arrayOf_java_lang_Object(array) {
    return array;
  }

  /**
   * @template T_1
   * @return {T_1}
   * @public
   */
  m_checked__() {
    return null;
  }

  /**
   * @template T_1
   * @return {T_1}
   * @public
   */
  m_unchecked__() {
    return null;
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let g = /**@type {!GenericMethod<(Number|number)>} */ (
        GenericMethod.$create__());
    g.m_foo__java_lang_Object__java_lang_Object(g, g);
    g.m_foo__java_lang_Object__java_lang_Object(
        Error.$create__(), Exception.$create__());
    g.m_fun__java_lang_Object(j_l_Object.$create__());
    g.m_fun__java_lang_Exception(Exception.$create__());
    g.m_fun__java_lang_Error(Error.$create__());
    g.m_fun__arrayOf_java_lang_Object(
        /**@type {!Array<?string>} */ ($Arrays.$init(['asdf'], j_l_String)));
    let s = /**@type {?string} */ ($Casts.$to(this.m_checked__(), j_l_String));
    s = /**@type {?string} */ (this.m_unchecked__());
  }

  /**
   * @param {Content} content
   * @return {void}
   * @public
   */
  static m_acceptsContent__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_Content(
      content) {
    GenericMethod.$clinit();
  }

  /**
   * @param {?string} string_1
   * @return {void}
   * @public
   */
  static m_acceptsString__java_lang_String(string_1) {
    GenericMethod.$clinit();
  }

  /**
   * @return {void}
   * @public
   */
  static m_testErasureCast_wildcard__() {
    GenericMethod.$clinit();
    let list = null;
    let content =
        /**@type {Container<Content>} */ (
            $Casts.$to(list.getAtIndex(0), Container))
            .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod();
    GenericMethod.m_acceptsString__java_lang_String(
        content
            .m_getProp___$pp_com_google_j2cl_transpiler_readable_genericmethod());
    GenericMethod
        .m_acceptsContent__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_Content(
            content);
    let nestedWildcardList = null;
    let nestedContent =
        /**@type {Container} */
        (/**@type {SuperContainer<Container>} */ (
             $Casts.$to(nestedWildcardList.getAtIndex(0), SuperContainer))
             .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod())
            .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod();
    GenericMethod.m_acceptsString__java_lang_String(
        nestedContent
            .m_getProp___$pp_com_google_j2cl_transpiler_readable_genericmethod());
    GenericMethod
        .m_acceptsContent__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_Content(
            nestedContent);
    let deepWildcardList = null;
    let deepContent =
        /**@type {SuperContainer<Container<?>>} */ (
            $Casts.$to(deepWildcardList.getAtIndex(0), SuperContainer))
            .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod()
            .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod();
    GenericMethod.m_acceptsString__java_lang_String(
        deepContent
            .m_getProp___$pp_com_google_j2cl_transpiler_readable_genericmethod());
    GenericMethod
        .m_acceptsContent__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_Content(
            deepContent);
  }

  /**
   * @template CT, C
   * @return {void}
   * @public
   */
  static m_testErasureCast_typeVariable__() {
    GenericMethod.$clinit();
    let list = null;
    let content =
        /**@type {Container<C>} */ ($Casts.$to(list.getAtIndex(0), Container))
            .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod();
    GenericMethod.m_acceptsString__java_lang_String(
        content
            .m_getProp___$pp_com_google_j2cl_transpiler_readable_genericmethod());
    GenericMethod
        .m_acceptsContent__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_Content(
            content);
    let nestedTypeVariableList = null;
    let nestedContent =
        /**@type {Container} */
        (/**@type {SuperContainer<CT>} */ (
             $Casts.$to(nestedTypeVariableList.getAtIndex(0), SuperContainer))
             .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod())
            .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod();
    GenericMethod.m_acceptsString__java_lang_String(
        nestedContent
            .m_getProp___$pp_com_google_j2cl_transpiler_readable_genericmethod());
    GenericMethod
        .m_acceptsContent__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_Content(
            nestedContent);
    let deepTypeVariableList = null;
    let deepContent =
        /**@type {SuperContainer<Container<C>>} */ (
            $Casts.$to(deepTypeVariableList.getAtIndex(0), SuperContainer))
            .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod()
            .m_get___$pp_com_google_j2cl_transpiler_readable_genericmethod();
    GenericMethod.m_acceptsString__java_lang_String(
        deepContent
            .m_getProp___$pp_com_google_j2cl_transpiler_readable_genericmethod());
    GenericMethod
        .m_acceptsContent__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_Content(
            deepContent);
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    GenericMethod.$clinit = (() => {});
    GenericMethod.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof GenericMethod;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, GenericMethod);
  }

  /**
   * @public
   */
  static $loadModules() {
    $1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.$1$impl');
    $1LocalClass = goog.module.get(
        'com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.$1LocalClass$impl');
    Container = goog.module.get(
        'com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.Container$impl');
    SuperContainer = goog.module.get(
        'com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.SuperContainer$impl');
    Error = goog.module.get('java.lang.Error$impl');
    Exception = goog.module.get('java.lang.Exception$impl');
    j_l_String = goog.module.get('java.lang.String$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
};

$Util.$setClassMetadata(
    GenericMethod,
    'com.google.j2cl.transpiler.readable.genericmethod.GenericMethod');



exports = GenericMethod;
//# sourceMappingURL=GenericMethod.js.map