goog.module('com.google.j2cl.transpiler.readable.instancejsmethods.Main$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Child = goog.forwardDeclare('com.google.j2cl.transpiler.readable.instancejsmethods.Child$impl');
let Parent = goog.forwardDeclare('com.google.j2cl.transpiler.readable.instancejsmethods.Parent$impl');
let SuperParent = goog.forwardDeclare('com.google.j2cl.transpiler.readable.instancejsmethods.SuperParent$impl');


class Main extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!Main}
   * @public
   */
  static $create__() {
    Main.$clinit();
    let $instance = new Main();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_instancejsmethods_Main__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_instancejsmethods_Main__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  m_testCallBySuperParent__() {
    let sp = SuperParent.$create__();
    let p = Parent.$create__();
    let c = Child.$create__();
    let pp = Parent.$create__();
    let cc = Child.$create__();
    let intf = Child.$create__();
    sp.m_fun__int__int(12, 35);
    sp.m_bar__int__int(6, 7);
    p.m_fun__int__int(12, 35);
    p.m_bar__int__int(6, 7);
    c.m_fun__int__int(12, 35);
    c.m_bar__int__int(6, 7);
    pp.myFoo(1);
    cc.myFoo(1);
    intf.m_intfFoo__();
  }

  /**
   * @return {void}
   * @public
   */
  static m_testCallByConcreteType__() {
    Main.$clinit();
    let sp = SuperParent.$create__();
    let p = Parent.$create__();
    let c = Child.$create__();
    sp.m_fun__int__int(12, 35);
    sp.m_bar__int__int(6, 7);
    p.sum(12, 35);
    p.bar(6, 7);
    p.myFoo(1);
    c.sum(12, 35);
    c.bar(6, 7);
    c.myFoo(1);
    c.intfFoo();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    Main.$clinit = (() => {});
    Main.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Main;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Main);
  }

  /**
   * @public
   */
  static $loadModules() {
    Child = goog.module.get(
        'com.google.j2cl.transpiler.readable.instancejsmethods.Child$impl');
    Parent = goog.module.get(
        'com.google.j2cl.transpiler.readable.instancejsmethods.Parent$impl');
    SuperParent = goog.module.get(
        'com.google.j2cl.transpiler.readable.instancejsmethods.SuperParent$impl');
  }
};

$Util.$setClassMetadata(
    Main, 'com.google.j2cl.transpiler.readable.instancejsmethods.Main');



exports = Main;
//# sourceMappingURL=Main.js.map