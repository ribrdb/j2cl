goog.module('com.google.j2cl.transpiler.readable.cast.CastGenerics$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.$1$impl');
let A = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.A$impl');
let B = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.B$impl');
let BaseImplementor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.BaseImplementor$impl');
let Empty1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.Empty1$impl');
let Empty2 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.Empty2$impl');
let Foo = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.Foo$impl');
let Implementor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.Implementor$impl');
let Enum = goog.forwardDeclare('java.lang.Enum$impl');
let Error = goog.forwardDeclare('java.lang.Error$impl');
let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @template T, E
 */
class CastGenerics extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {T} */
    this.f_field__com_google_j2cl_transpiler_readable_cast_CastGenerics;
  }

  /**
   * @template T, E
   * @return {!CastGenerics<T, E>}
   * @public
   */
  static $create__() {
    CastGenerics.$clinit();
    let $instance = new CastGenerics();
    $instance.$ctor__com_google_j2cl_transpiler_readable_cast_CastGenerics__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_cast_CastGenerics__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {T}
   * @public
   */
  m_method___$pp_com_google_j2cl_transpiler_readable_cast() {
    return null;
  }

  /**
   * @template T_1, U
   * @return {void}
   * @public
   */
  static m_testErasureCast__() {
    CastGenerics.$clinit();
    let str = /**@type {?string} */ ($Casts.$to(
        /**@type {!CastGenerics<?string, (Number|number)>} */ (
            CastGenerics.$create__())
            .f_field__com_google_j2cl_transpiler_readable_cast_CastGenerics,
        j_l_String));
    str = /**@type {?string} */ ($Casts.$to(
        /**@type {!CastGenerics<?string, (Number|number)>} */ (
            CastGenerics.$create__())
            .m_method___$pp_com_google_j2cl_transpiler_readable_cast(),
        j_l_String));
    let containerT = null;
    /**@type {A} */ (
        $Casts.$to(
            containerT.m_get___$pp_com_google_j2cl_transpiler_readable_cast(),
            A))
        .m_mA__();
    /**@type {B} */ (
        $Casts.$to(
            containerT.m_get___$pp_com_google_j2cl_transpiler_readable_cast(),
            B))
        .m_mB__();
    let containerU = null;
    /**@type {A} */ (
        $Casts.$to(
            containerU.m_get___$pp_com_google_j2cl_transpiler_readable_cast(),
            A))
        .m_mA__();
    /**@type {B} */ (
        $Casts.$to(
            containerU.m_get___$pp_com_google_j2cl_transpiler_readable_cast(),
            B))
        .m_mB__();
    let containerArrT = null;
    let arrT = /**@type {Array<T_1>} */ ($Arrays.$castTo(
        containerArrT.m_get___$pp_com_google_j2cl_transpiler_readable_cast(), A,
        1));
    /**@type {A} */ (arrT[0]).m_mA__();
    /**@type {B} */ ($Casts.$to(arrT[0], B)).m_mB__();
    let arrA = /**@type {Array<A>} */ ($Arrays.$castTo(
        containerArrT.m_get___$pp_com_google_j2cl_transpiler_readable_cast(), A,
        1));
    let arrB = /**@type {Array<B>} */ ($Arrays.$castTo(
        containerArrT.m_get___$pp_com_google_j2cl_transpiler_readable_cast(), B,
        1));
    let containerArrU = null;
    let arrU = /**@type {Array<U>} */ ($Arrays.$castTo(
        containerArrU.m_get___$pp_com_google_j2cl_transpiler_readable_cast(), A,
        1));
    /**@type {A} */ (arrU[0]).m_mA__();
    /**@type {B} */ ($Casts.$to(arrU[0], B)).m_mB__();
    arrA = /**@type {Array<A>} */ ($Arrays.$castTo(
        containerArrU.m_get___$pp_com_google_j2cl_transpiler_readable_cast(), A,
        1));
    arrB = /**@type {Array<B>} */ ($Arrays.$castTo(
        containerArrU.m_get___$pp_com_google_j2cl_transpiler_readable_cast(), B,
        1));
    let containerBase = null;
    /**@type {BaseImplementor} */ (
        $Casts.$to(
            containerBase
                .m_get___$pp_com_google_j2cl_transpiler_readable_cast(),
            BaseImplementor))
        .m_mA__();
    /**@type {BaseImplementor} */ (
        $Casts.$to(
            containerBase
                .m_get___$pp_com_google_j2cl_transpiler_readable_cast(),
            BaseImplementor))
        .m_mB__();
    let containerImplementor = null;
    /**@type {Implementor} */ (
        $Casts.$to(
            containerImplementor
                .m_get___$pp_com_google_j2cl_transpiler_readable_cast(),
            Implementor))
        .m_mA__();
    /**@type {Implementor} */ (
        $Casts.$to(
            containerImplementor
                .m_get___$pp_com_google_j2cl_transpiler_readable_cast(),
            Implementor))
        .m_mB__();
  }

  /**
   * @return {void}
   * @public
   */
  static m_testCastToParamterizedType__() {
    CastGenerics.$clinit();
    let o = Integer.$create__int(1);
    let cc = /**@type {CastGenerics<Error, (Number|number)>} */ (
        $Casts.$to(o, CastGenerics));
    cc = /**@type {CastGenerics} */ ($Casts.$to(o, CastGenerics));
  }

  /**
   * @return {void}
   * @public
   */
  m_testCastToTypeVariable__() {
    let o = Integer.$create__int(1);
    let e = /**@type {E} */ ($Casts.$to(o, Number));
    let t = /**@type {T} */ (o);
    let es = /**@type {Array<E>} */ ($Arrays.$castTo(o, Number, 1));
    let ts = /**@type {Array<T>} */ ($Arrays.$castTo(o, j_l_Object, 1));
  }

  /**
   * @template S, V
   * @return {void}
   * @public
   */
  m_testCastToMethodTypeVariable__() {
    let o = Integer.$create__int(1);
    let s = /**@type {S} */ (o);
    let c = /**@type {CastGenerics<S, (Number|number)>} */ (
        $Casts.$to(o, CastGenerics));
    c = /**@type {Array<S>} */ ($Arrays.$castTo(o, j_l_Object, 1));
    c = /**@type {V} */ ($Casts.$to(o, Enum));
  }

  /**
   * @template TT
   * @return {void}
   * @public
   */
  m_outerGenericMethod__() {}

  /**
   * @template EE
   * @param {*} o
   * @return {EE}
   * @public
   */
  m_method__java_lang_Object(o) {
    if (Empty1.$isInstance(o)) {
      return /**@type {EE} */ ($Casts.$to(o, Empty1));
    }
    return null;
  }

  /**
   * @template T_1
   * @return {Foo<T_1>}
   * @public
   */
  static m_doSomething__() {
    CastGenerics.$clinit();
    return /**@type {!$1<T_1>} */ ($1.$create__());
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    CastGenerics.$clinit = (() => {});
    CastGenerics.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof CastGenerics;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, CastGenerics);
  }

  /**
   * @public
   */
  static $loadModules() {
    $1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.cast.CastGenerics.$1$impl');
    A = goog.module.get(
        'com.google.j2cl.transpiler.readable.cast.CastGenerics.A$impl');
    B = goog.module.get(
        'com.google.j2cl.transpiler.readable.cast.CastGenerics.B$impl');
    BaseImplementor = goog.module.get(
        'com.google.j2cl.transpiler.readable.cast.CastGenerics.BaseImplementor$impl');
    Empty1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.cast.CastGenerics.Empty1$impl');
    Implementor = goog.module.get(
        'com.google.j2cl.transpiler.readable.cast.CastGenerics.Implementor$impl');
    Enum = goog.module.get('java.lang.Enum$impl');
    Integer = goog.module.get('java.lang.Integer$impl');
    Number = goog.module.get('java.lang.Number$impl');
    j_l_String = goog.module.get('java.lang.String$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
};

$Util.$setClassMetadata(
    CastGenerics, 'com.google.j2cl.transpiler.readable.cast.CastGenerics');



exports = CastGenerics;
//# sourceMappingURL=CastGenerics.js.map