goog.module('com.google.j2cl.transpiler.readable.markimplementornativetypes.SubNativeInterface$impl');


const RegularInterface = goog.require('com.google.j2cl.transpiler.readable.markimplementornativetypes.RegularInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const MyNativeInterface = goog.require('test.foo.MyNativeInterface');

let $Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.markimplementornativetypes.MyNativeInterface.$Overlay$impl');


/**
 * @interface
 * @extends {MyNativeInterface}
 * @extends {RegularInterface}
 */
class SubNativeInterface {
  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    SubNativeInterface.$clinit = (() => {});
    SubNativeInterface.$loadModules();
  }

  /**
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    RegularInterface.$markImplementor(classConstructor);
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_markimplementornativetypes_SubNativeInterface =
        true;
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_markimplementornativetypes_SubNativeInterface;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        !!classConstructor.prototype
              .$implements__com_google_j2cl_transpiler_readable_markimplementornativetypes_SubNativeInterface;
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadataForInterface(
    SubNativeInterface,
    'com.google.j2cl.transpiler.readable.markimplementornativetypes.SubNativeInterface');


SubNativeInterface.$markImplementor(
    /** @type {Function} */ (SubNativeInterface));


exports = SubNativeInterface;
//# sourceMappingURL=SubNativeInterface.js.map