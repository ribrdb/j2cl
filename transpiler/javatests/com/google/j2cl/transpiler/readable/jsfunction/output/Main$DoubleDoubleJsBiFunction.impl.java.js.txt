goog.module('com.google.j2cl.transpiler.readable.jsfunction.Main.DoubleDoubleJsBiFunction$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const $JavaScriptFunction = goog.require('vmbootstrap.JavaScriptFunction$impl');

let Double = goog.forwardDeclare('java.lang.Double$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


class DoubleDoubleJsBiFunction extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {function(?number, ?number):?number}
   * @public
   */
  static $create__() {
    DoubleDoubleJsBiFunction.$clinit();
    let $instance = new DoubleDoubleJsBiFunction();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsfunction_Main_DoubleDoubleJsBiFunction__();
    return $Util.$makeLambdaFunction(
        DoubleDoubleJsBiFunction.prototype
            .m_apply__java_lang_Object__java_lang_Number,
        $instance, DoubleDoubleJsBiFunction.$copy);
  }

  /**
   * @suppress {invalidCasts}
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsfunction_Main_DoubleDoubleJsBiFunction__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @param {function(?number, ?number):?number} $thisArg
   * @param {?number} d
   * @param {?number} i
   * @return {?number}
   * @public
   */
  static m_apply__com_google_j2cl_transpiler_readable_jsfunction_Main_DoubleDoubleJsBiFunction__java_lang_Double__java_lang_Double(
      $thisArg, d, i) {
    DoubleDoubleJsBiFunction.$clinit();
    return d;
  }

  /**
   * Bridge method.
   * @this {?function(?number, ?number):?number}
   * @param {*} arg0
   * @param {(Number|number)} arg1
   * @return {?number}
   * @public
   */
  m_apply__java_lang_Object__java_lang_Number(arg0, arg1) {
    return DoubleDoubleJsBiFunction
        .m_apply__com_google_j2cl_transpiler_readable_jsfunction_Main_DoubleDoubleJsBiFunction__java_lang_Double__java_lang_Double(
            this, /**@type {?number} */ ($Casts.$to(arg0, Double)),
            /**@type {?number} */ ($Casts.$to(arg1, Double)));
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    DoubleDoubleJsBiFunction.$clinit = (() => {});
    DoubleDoubleJsBiFunction.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        !!instance
              .$is__com_google_j2cl_transpiler_readable_jsfunction_Main_DoubleDoubleJsBiFunction;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, DoubleDoubleJsBiFunction);
  }

  /**
   * @param {DoubleDoubleJsBiFunction} from
   * @param {?} to
   * @public
   */
  static $copy(from, to) {
    // Marks the object is an instance of this class.
    to.$is__com_google_j2cl_transpiler_readable_jsfunction_Main_DoubleDoubleJsBiFunction =
        true;
  }

  /**
   * @public
   */
  static $loadModules() {
    Double = goog.module.get('java.lang.Double$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
};

$Util.$setClassMetadata(
    DoubleDoubleJsBiFunction,
    'com.google.j2cl.transpiler.readable.jsfunction.Main$DoubleDoubleJsBiFunction');


$JavaScriptFunction.$markImplementor(DoubleDoubleJsBiFunction);


exports = DoubleDoubleJsBiFunction;
//# sourceMappingURL=Main$DoubleDoubleJsBiFunction.js.map