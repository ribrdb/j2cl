goog.module('com.google.j2cl.transpiler.readable.localclassinstaticcontext.LocalClassInStaticContext.C$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1D = goog.forwardDeclare('com.google.j2cl.transpiler.readable.localclassinstaticcontext.LocalClassInStaticContext.C.$1D$impl');


class C extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {number} */
    this.f_f__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C =
        0;
  }

  /**
   * @return {!C}
   * @public
   */
  static $create__() {
    C.$clinit();
    let $instance = new C();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    $1D.$create__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C(
           this)
        .m_fun__();
  }

  /**
   * @return {void}
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C() {
    this.f_f__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C =
        1;
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    C.$clinit = (() => {});
    C.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof C;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, C);
  }

  /**
   * @public
   */
  static $loadModules() {
    $1D = goog.module.get(
        'com.google.j2cl.transpiler.readable.localclassinstaticcontext.LocalClassInStaticContext.C.$1D$impl');
  }
};

$Util.$setClassMetadata(
    C,
    'com.google.j2cl.transpiler.readable.localclassinstaticcontext.LocalClassInStaticContext$C');



exports = C;
//# sourceMappingURL=LocalClassInStaticContext$C.js.map