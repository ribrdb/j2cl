goog.module('com.google.j2cl.transpiler.readable.jsvarargs.Main.SubMain$impl');


const Main = goog.require('com.google.j2cl.transpiler.readable.jsvarargs.Main$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let InternalPreconditions = goog.forwardDeclare('javaemul.internal.InternalPreconditions$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class SubMain extends Main {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!SubMain}
   * @public
   */
  static $create__() {
    SubMain.$clinit();
    let $instance = new SubMain();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsvarargs_Main_SubMain__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsvarargs_Main_SubMain__() {
    this.$ctor__com_google_j2cl_transpiler_readable_jsvarargs_Main__int(10);
  }

  /**
   * @override
   * @param {number} m
   * @param {...number} numbers
   * @return {number}
   * @public
   */
  f3(m, ...numbers) {
    $Arrays.$stampType(numbers, $int, 1);
    let a = super.f3(1, 1, 2);
    a += super.f3(1);
    a += super.f3(1, 1, 2);
    a += super.f3(1);
    let ints = /**@type {!Array<number>} */ ($Arrays.$init([1, 2], $int));
    a += super.f3(
        1, ...InternalPreconditions.m_checkNotNull__java_lang_Object(ints));
    return a;
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    SubMain.$clinit = (() => {});
    SubMain.$loadModules();
    Main.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof SubMain;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SubMain);
  }

  /**
   * @public
   */
  static $loadModules() {
    InternalPreconditions =
        goog.module.get('javaemul.internal.InternalPreconditions$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
  }
};

$Util.$setClassMetadata(
    SubMain, 'com.google.j2cl.transpiler.readable.jsvarargs.Main$SubMain');



exports = SubMain;
//# sourceMappingURL=Main$SubMain.js.map