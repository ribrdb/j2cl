goog.module('com.google.j2cl.transpiler.readable.genericanddefaultmethods.InterfaceWithDefault$impl');


const $Util = goog.require('nativebootstrap.Util$impl');

let System = goog.forwardDeclare('java.lang.System$impl');


/**
 * @interface
 */
class InterfaceWithDefault {
  /**
   * @abstract
   * @param {?string} value
   * @return {void}
   * @public
   */
  m_foo__java_lang_String(value) {}

  /**
   * @param {!InterfaceWithDefault} $thisArg
   * @param {?string} value
   * @return {void}
   * @public
   */
  static m_foo__$default__com_google_j2cl_transpiler_readable_genericanddefaultmethods_InterfaceWithDefault__java_lang_String(
      $thisArg, value) {
    InterfaceWithDefault.$clinit();
    System.f_out__java_lang_System.m_println__java_lang_String(
        'in InterfaceWithDefault');
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    InterfaceWithDefault.$clinit = (() => {});
    InterfaceWithDefault.$loadModules();
  }

  /**
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_genericanddefaultmethods_InterfaceWithDefault =
        true;
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_genericanddefaultmethods_InterfaceWithDefault;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        !!classConstructor.prototype
              .$implements__com_google_j2cl_transpiler_readable_genericanddefaultmethods_InterfaceWithDefault;
  }

  /**
   * @public
   */
  static $loadModules() {
    System = goog.module.get('java.lang.System$impl');
  }
};

$Util.$setClassMetadataForInterface(
    InterfaceWithDefault,
    'com.google.j2cl.transpiler.readable.genericanddefaultmethods.InterfaceWithDefault');


InterfaceWithDefault.$markImplementor(
    /** @type {Function} */ (InterfaceWithDefault));


exports = InterfaceWithDefault;
//# sourceMappingURL=InterfaceWithDefault.js.map