goog.module('com.google.j2cl.transpiler.readable.lambdas.Lambdas.LambdaInSubClass$impl');


const Parent = goog.require('com.google.j2cl.transpiler.readable.lambdas.Lambdas.Parent$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let FunctionalInterface = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.FunctionalInterface$impl');


class LambdaInSubClass extends Parent {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!LambdaInSubClass}
   * @public
   */
  static $create__() {
    LambdaInSubClass.$clinit();
    let $instance = new LambdaInSubClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_LambdaInSubClass__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_LambdaInSubClass__() {
    this.$ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Parent__();
  }

  /**
   * @return {void}
   * @public
   */
  m_testLambdaInSubclass__() {
    let l = FunctionalInterface.$adapt(((/** number */ i) => {
      this.m_funInParent__();
      this.m_funInParent__();
      this.m_funInParent__();
      let a =
          this.f_fieldInParent__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Parent;
      a = this.f_fieldInParent__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Parent;
      a = this.f_fieldInParent__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Parent;
      return a;
    }));
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    LambdaInSubClass.$clinit = (() => {});
    LambdaInSubClass.$loadModules();
    Parent.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof LambdaInSubClass;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaInSubClass);
  }

  /**
   * @public
   */
  static $loadModules() {
    FunctionalInterface = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.FunctionalInterface$impl');
  }
};

$Util.$setClassMetadata(
    LambdaInSubClass,
    'com.google.j2cl.transpiler.readable.lambdas.Lambdas$LambdaInSubClass');



exports = LambdaInSubClass;
//# sourceMappingURL=Lambdas$LambdaInSubClass.js.map