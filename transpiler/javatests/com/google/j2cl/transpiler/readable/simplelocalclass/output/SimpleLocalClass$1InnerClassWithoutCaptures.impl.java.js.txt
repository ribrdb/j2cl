goog.module('com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass.$1InnerClassWithoutCaptures$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let SimpleLocalClass = goog.forwardDeclare('com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$impl');


class $1InnerClassWithoutCaptures extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {SimpleLocalClass} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass_1InnerClassWithoutCaptures;
  }

  /**
   * @param {SimpleLocalClass} $outer_this
   * @return {!$1InnerClassWithoutCaptures}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass(
      $outer_this) {
    $1InnerClassWithoutCaptures.$clinit();
    let $instance = new $1InnerClassWithoutCaptures();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass_1InnerClassWithoutCaptures__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass(
            $outer_this);
    return $instance;
  }

  /**
   * @param {SimpleLocalClass} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass_1InnerClassWithoutCaptures__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass_1InnerClassWithoutCaptures =
        $outer_this;
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    $1InnerClassWithoutCaptures.$clinit = (() => {});
    $1InnerClassWithoutCaptures.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $1InnerClassWithoutCaptures;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $1InnerClassWithoutCaptures);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    $1InnerClassWithoutCaptures,
    'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$1InnerClassWithoutCaptures');



exports = $1InnerClassWithoutCaptures;
//# sourceMappingURL=SimpleLocalClass$1InnerClassWithoutCaptures.js.map