goog.module('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.S$impl');


const R = goog.require('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.R$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Main = goog.forwardDeclare('com.google.j2cl.transpiler.readable.bridgejsmethod.Main$impl');


class S extends R {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {Main} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_S;
  }

  /**
   * @param {Main} $outer_this
   * @return {!S}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
      $outer_this) {
    S.$clinit();
    let $instance = new S();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_S__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
            $outer_this);
    return $instance;
  }

  /**
   * @param {Main} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_S__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_S =
        $outer_this;
    this.$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_R__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
        $outer_this);
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    S.$clinit = (() => {});
    S.$loadModules();
    R.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof S;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, S);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    S, 'com.google.j2cl.transpiler.readable.bridgejsmethod.Main$S');



exports = S;
//# sourceMappingURL=Main$S.js.map