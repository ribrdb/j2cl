goog.module('com.google.j2cl.transpiler.readable.switchstatement.SwitchStatement$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Numbers = goog.forwardDeclare('com.google.j2cl.transpiler.readable.switchstatement.Numbers$impl');
let InternalPreconditions = goog.forwardDeclare('javaemul.internal.InternalPreconditions$impl');
let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');


class SwitchStatement extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!SwitchStatement}
   * @public
   */
  static $create__() {
    SwitchStatement.$clinit();
    let $instance = new SwitchStatement();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_switchstatement_SwitchStatement__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_switchstatement_SwitchStatement__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  m_main__() {
    switch (InternalPreconditions.m_checkNotNull__java_lang_Object('one')) {
      case 'one':
      case 'two':
        break;
      default:
        return;
    }
    switch (49 /* '1' */) {
      case 49 /* '1' */:
      case 50 /* '2' */:
        break;
      default:
        return;
    }
    switch (1) {
      case 1:
      case 2:
        break;
      default:
        return;
    }
    switch (
        Numbers
            .f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers
            .ordinal()) {
      case Numbers
          .$ordinal$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers:
      case Numbers
          .$ordinal$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers:
        break;
      default:
        return;
    }
  }

  /**
   * @return {void}
   * @public
   */
  static m_testSwitchVariableDeclarations___$p_com_google_j2cl_transpiler_readable_switchstatement_SwitchStatement() {
    let /** number */ unassigned, /** number */ unassigned2, /** number */ i,
        /** number */ j, /** number */ b, /** number */ i_1;
    SwitchStatement.$clinit();
    switch (3) {
      case 1:
        i = 0;
        (j = 2, b = j + 1);
        break;
      case 3:
        i = 3;
        $Asserts.$assert(i == 3);
        return;
    }
    switch (5) {
      case 5:
        i_1 = 1;
        break;
    }
    $Asserts.$assert(false);
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    SwitchStatement.$clinit = (() => {});
    SwitchStatement.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof SwitchStatement;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SwitchStatement);
  }

  /**
   * @public
   */
  static $loadModules() {
    Numbers = goog.module.get(
        'com.google.j2cl.transpiler.readable.switchstatement.Numbers$impl');
    InternalPreconditions =
        goog.module.get('javaemul.internal.InternalPreconditions$impl');
    $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
  }
};

$Util.$setClassMetadata(
    SwitchStatement,
    'com.google.j2cl.transpiler.readable.switchstatement.SwitchStatement');



exports = SwitchStatement;
//# sourceMappingURL=SwitchStatement.js.map