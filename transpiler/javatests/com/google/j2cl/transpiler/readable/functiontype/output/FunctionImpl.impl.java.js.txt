goog.module('com.google.j2cl.transpiler.readable.functiontype.FunctionImpl$impl');


const c_g_j2cl_transpiler_readable_functiontype_Function = goog.require('com.google.j2cl.transpiler.readable.functiontype.Function$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @implements {c_g_j2cl_transpiler_readable_functiontype_Function}
 */
class FunctionImpl extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!FunctionImpl}
   * @public
   */
  static $create__() {
    FunctionImpl.$clinit();
    let $instance = new FunctionImpl();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_functiontype_FunctionImpl__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_functiontype_FunctionImpl__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @param {c_g_j2cl_transpiler_readable_functiontype_Function} f
   * @return {void}
   * @public
   */
  m_test__com_google_j2cl_transpiler_readable_functiontype_Function(f) {}

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    FunctionImpl.$clinit = (() => {});
    FunctionImpl.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof FunctionImpl;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, FunctionImpl);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    FunctionImpl,
    'com.google.j2cl.transpiler.readable.functiontype.FunctionImpl');


c_g_j2cl_transpiler_readable_functiontype_Function.$markImplementor(
    FunctionImpl);


exports = FunctionImpl;
//# sourceMappingURL=FunctionImpl.js.map