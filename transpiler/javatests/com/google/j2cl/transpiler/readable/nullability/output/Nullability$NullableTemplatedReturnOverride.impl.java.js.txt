goog.module('com.google.j2cl.transpiler.readable.nullability.Nullability.NullableTemplatedReturnOverride$impl');


const NullableTemplatedReturn = goog.require('com.google.j2cl.transpiler.readable.nullability.Nullability.NullableTemplatedReturn$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @implements {NullableTemplatedReturn<?string>}
 */
class NullableTemplatedReturnOverride extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!NullableTemplatedReturnOverride}
   * @public
   */
  static $create__() {
    NullableTemplatedReturnOverride.$clinit();
    let $instance = new NullableTemplatedReturnOverride();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nullability_Nullability_NullableTemplatedReturnOverride__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nullability_Nullability_NullableTemplatedReturnOverride__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @override
   * @return {?string}
   * @public
   */
  m_foo__() {
    return 'foo';
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    NullableTemplatedReturnOverride.$clinit = (() => {});
    NullableTemplatedReturnOverride.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof NullableTemplatedReturnOverride;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor, NullableTemplatedReturnOverride);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    NullableTemplatedReturnOverride,
    'com.google.j2cl.transpiler.readable.nullability.Nullability$NullableTemplatedReturnOverride');


NullableTemplatedReturn.$markImplementor(NullableTemplatedReturnOverride);


exports = NullableTemplatedReturnOverride;
//# sourceMappingURL=Nullability$NullableTemplatedReturnOverride.js.map