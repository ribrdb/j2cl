goog.module('com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor.$1LocalClass$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let LocalClassWithConstructor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor$impl');


class $1LocalClass extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {LocalClassWithConstructor} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass;
    /** @public {number} */
    this.f_field__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass =
        0;
    /** @public {number} */
    this.$c_localVar = 0;
    /** @public {number} */
    this.$c_p = 0;
  }

  /**
   * Factory method corresponding to constructor
   * 'LocalClass(LocalClassWithConstructor, int, int, int, int)'.
   * @param {LocalClassWithConstructor} $outer_this
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {number} a
   * @param {number} b
   * @return {!$1LocalClass}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor__int__int__int__int(
      $outer_this, $c_localVar, $c_p, a, b) {
    $1LocalClass.$clinit();
    let $instance = new $1LocalClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor__int__int__int__int(
            $outer_this, $c_localVar, $c_p, a, b);
    return $instance;
  }

  /**
   * Initialization from constructor 'LocalClass(LocalClassWithConstructor, int,
   * int, int, int)'.
   * @param {LocalClassWithConstructor} $outer_this
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {number} a
   * @param {number} b
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor__int__int__int__int(
      $outer_this, $c_localVar, $c_p, a, b) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass =
        $outer_this;
    this.$c_localVar = $c_localVar;
    this.$c_p = $c_p;
    this.$ctor__java_lang_Object__();
    this.f_field__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass =
        $c_localVar + a + b;
  }

  /**
   * Factory method corresponding to constructor
   * 'LocalClass(LocalClassWithConstructor, int, int, int)'.
   * @param {LocalClassWithConstructor} $outer_this
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {number} a
   * @return {!$1LocalClass}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor__int__int__int(
      $outer_this, $c_localVar, $c_p, a) {
    $1LocalClass.$clinit();
    let $instance = new $1LocalClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor__int__int__int(
            $outer_this, $c_localVar, $c_p, a);
    return $instance;
  }

  /**
   * Initialization from constructor 'LocalClass(LocalClassWithConstructor, int,
   * int, int)'.
   * @param {LocalClassWithConstructor} $outer_this
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {number} a
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor__int__int__int(
      $outer_this, $c_localVar, $c_p, a) {
    this.$ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor__int__int__int__int(
        $outer_this, $c_localVar, $c_p, a, $c_p);
    this.f_field__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor_1LocalClass =
        $c_localVar;
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    $1LocalClass.$clinit = (() => {});
    $1LocalClass.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $1LocalClass;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $1LocalClass);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    $1LocalClass,
    'com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor$1LocalClass');



exports = $1LocalClass;
//# sourceMappingURL=LocalClassWithConstructor$1LocalClass.js.map