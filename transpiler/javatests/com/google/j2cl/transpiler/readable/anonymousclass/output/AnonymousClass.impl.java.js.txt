goog.module('com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass.$1$impl');


class AnonymousClass extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!AnonymousClass}
   * @public
   */
  static $create__() {
    AnonymousClass.$clinit();
    let $instance = new AnonymousClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  m_main__() {
    let instance =
        $1.$create__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass__int(
            this, 1);
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    AnonymousClass.$clinit = (() => {});
    AnonymousClass.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof AnonymousClass;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AnonymousClass);
  }

  /**
   * @public
   */
  static $loadModules() {
    $1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass.$1$impl');
  }
};

$Util.$setClassMetadata(
    AnonymousClass,
    'com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass');



exports = AnonymousClass;
//# sourceMappingURL=AnonymousClass.js.map