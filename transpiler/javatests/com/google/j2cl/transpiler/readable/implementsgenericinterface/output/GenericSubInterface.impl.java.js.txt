goog.module('com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericSubInterface$impl');


const GenericInterface = goog.require('com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @interface
 * @template T
 * @extends {GenericInterface<T>}
 */
class GenericSubInterface {
  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    GenericSubInterface.$clinit = (() => {});
    GenericSubInterface.$loadModules();
  }

  /**
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    GenericInterface.$markImplementor(classConstructor);
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericSubInterface =
        true;
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericSubInterface;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        !!classConstructor.prototype
              .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericSubInterface;
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadataForInterface(
    GenericSubInterface,
    'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericSubInterface');


GenericSubInterface.$markImplementor(
    /** @type {Function} */ (GenericSubInterface));


exports = GenericSubInterface;
//# sourceMappingURL=GenericSubInterface.js.map