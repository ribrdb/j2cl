goog.module('com.google.j2cl.transpiler.readable.enums.Enum2.$1$impl');


const Enum2 = goog.require('com.google.j2cl.transpiler.readable.enums.Enum2$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


class $1 extends Enum2 {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @param {?string} $name
   * @param {number} $ordinal
   * @param {number} $_0
   * @return {!$1}
   * @public
   */
  static $create__java_lang_String__int__int($name, $ordinal, $_0) {
    $1.$clinit();
    let $instance = new $1();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_enums_Enum2_1__java_lang_String__int__int(
            $name, $ordinal, $_0);
    return $instance;
  }

  /**
   * @param {?string} $name
   * @param {number} $ordinal
   * @param {number} $_0
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_enums_Enum2_1__java_lang_String__int__int(
      $name, $ordinal, $_0) {
    this.$ctor__com_google_j2cl_transpiler_readable_enums_Enum2__java_lang_String__int__int(
        $name, $ordinal, $_0);
  }

  /**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {number}
   * @public
   */
  m_compareTo__java_lang_Object(arg0) {
    return super.compareTo(/**@type {Enum2} */ ($Casts.$to(arg0, Enum2)));
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    $1.$clinit = (() => {});
    $1.$loadModules();
    Enum2.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $1;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $1);
  }

  /**
   * @public
   */
  static $loadModules() {
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
};

$Util.$setClassMetadata(
    $1, 'com.google.j2cl.transpiler.readable.enums.Enum2$1');



exports = $1;
//# sourceMappingURL=Enum2$1.js.map