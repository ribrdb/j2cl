goog.module('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.ExportedTypeNewName$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let JsDocTypeMappings = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings$impl');


class ExportedType extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {JsDocTypeMappings} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings_ExportedType;
  }

  /**
   * @param {JsDocTypeMappings} $outer_this
   * @return {!ExportedType}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings(
      $outer_this) {
    ExportedType.$clinit();
    let $instance = new ExportedType();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings_ExportedType__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings(
            $outer_this);
    return $instance;
  }

  /**
   * @param {JsDocTypeMappings} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings_ExportedType__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings_ExportedType =
        $outer_this;
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    ExportedType.$clinit = (() => {});
    ExportedType.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof ExportedType;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, ExportedType);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    ExportedType,
    'com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings$ExportedType');



exports = ExportedType;
//# sourceMappingURL=JsDocTypeMappings$ExportedType.js.map