goog.module('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let NestedGenericClass = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass$impl');


/**
 * @template T
 */
class C extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {NestedGenericClass<T>} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C;
    /** @public {T} */
    this.f_c__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C;
  }

  /**
   * @template T
   * @param {NestedGenericClass<T>} $outer_this
   * @return {!C<T>}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
      $outer_this) {
    C.$clinit();
    let $instance = new C();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
            $outer_this);
    return $instance;
  }

  /**
   * @param {NestedGenericClass<T>} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C =
        $outer_this;
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    C.$clinit = (() => {});
    C.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof C;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, C);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    C,
    'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass$C');



exports = C;
//# sourceMappingURL=NestedGenericClass$C.js.map