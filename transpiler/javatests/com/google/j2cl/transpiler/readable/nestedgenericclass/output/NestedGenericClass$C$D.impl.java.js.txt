goog.module('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C.D$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let C = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C$impl');


/**
 * @template T
 */
class D extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {C<T>} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C_D;
    /** @public {T} */
    this.f_d__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C_D;
  }

  /**
   * @template T
   * @param {C<T>} $outer_this
   * @return {!D<T>}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C(
      $outer_this) {
    D.$clinit();
    let $instance = new D();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C_D__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C(
            $outer_this);
    return $instance;
  }

  /**
   * @param {C<T>} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C_D__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C_D =
        $outer_this;
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    D.$clinit = (() => {});
    D.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof D;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, D);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    D,
    'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass$C$D');



exports = D;
//# sourceMappingURL=NestedGenericClass$C$D.js.map