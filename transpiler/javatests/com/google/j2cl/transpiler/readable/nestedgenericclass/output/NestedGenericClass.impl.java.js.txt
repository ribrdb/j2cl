goog.module('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1E = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$1E$impl');
let $1F = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$1F$impl');
let $1G = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$1G$impl');
let A = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.A$impl');
let B = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.A.B$impl');
let C = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C$impl');
let D = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C.D$impl');
let Error = goog.forwardDeclare('java.lang.Error$impl');
let Exception = goog.forwardDeclare('java.lang.Exception$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');


/**
 * @template T
 */
class NestedGenericClass extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @template T
   * @return {!NestedGenericClass<T>}
   * @public
   */
  static $create__() {
    NestedGenericClass.$clinit();
    let $instance = new NestedGenericClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @template S
   * @param {S} t
   * @return {void}
   * @public
   */
  m_fun__java_lang_Object(t) {
    $1E.$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
        this);
    $1F.$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
        this);
  }

  /**
   * @template T_1
   * @return {void}
   * @public
   */
  m_bar__() {
    /**@type {!$1G<Error, T_1, T>} */
    ($1G.$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
         this))
        .m_bar__();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let n = /**@type {!NestedGenericClass<(Number|number)>} */ (
        NestedGenericClass.$create__());
    let a = /**@type {!A<Error, (Number|number)>} */ (
        A.$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
            n));
    let b = /**@type {!B<Exception, Error, (Number|number)>} */ (
        B.$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_A(
            a));
    C.$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
        n);
    D.$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass_C(
        /**@type {!C<(Number|number)>} */
        (C.$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
            n)));
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    NestedGenericClass.$clinit = (() => {});
    NestedGenericClass.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof NestedGenericClass;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, NestedGenericClass);
  }

  /**
   * @public
   */
  static $loadModules() {
    $1E = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$1E$impl');
    $1F = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$1F$impl');
    $1G = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$1G$impl');
    A = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.A$impl');
    B = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.A.B$impl');
    C = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C$impl');
    D = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C.D$impl');
  }
};

$Util.$setClassMetadata(
    NestedGenericClass,
    'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass');



exports = NestedGenericClass;
//# sourceMappingURL=NestedGenericClass.js.map