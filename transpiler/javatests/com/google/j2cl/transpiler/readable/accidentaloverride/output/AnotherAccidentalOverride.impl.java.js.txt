goog.module('com.google.j2cl.transpiler.readable.accidentaloverride.AnotherAccidentalOverride$impl');


const Parent = goog.require('com.google.j2cl.transpiler.readable.accidentaloverride.Parent$impl');
const SuperInterface = goog.require('com.google.j2cl.transpiler.readable.accidentaloverride.SuperInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let AssertionError = goog.forwardDeclare('java.lang.AssertionError$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @extends {Parent<AssertionError>}
 * @implements {SuperInterface<AssertionError>}
 */
class AnotherAccidentalOverride extends Parent {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!AnotherAccidentalOverride}
   * @public
   */
  static $create__() {
    AnotherAccidentalOverride.$clinit();
    let $instance = new AnotherAccidentalOverride();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_accidentaloverride_AnotherAccidentalOverride__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_accidentaloverride_AnotherAccidentalOverride__() {
    this.$ctor__com_google_j2cl_transpiler_readable_accidentaloverride_Parent__();
  }

  /**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {void}
   * @public
   */
  m_foo__java_lang_Object(arg0) {
    super.m_foo__java_lang_Error(
        /**@type {AssertionError} */ ($Casts.$to(arg0, AssertionError)));
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    AnotherAccidentalOverride.$clinit = (() => {});
    AnotherAccidentalOverride.$loadModules();
    Parent.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof AnotherAccidentalOverride;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AnotherAccidentalOverride);
  }

  /**
   * @public
   */
  static $loadModules() {
    AssertionError = goog.module.get('java.lang.AssertionError$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
};

$Util.$setClassMetadata(
    AnotherAccidentalOverride,
    'com.google.j2cl.transpiler.readable.accidentaloverride.AnotherAccidentalOverride');


SuperInterface.$markImplementor(AnotherAccidentalOverride);


exports = AnotherAccidentalOverride;
//# sourceMappingURL=AnotherAccidentalOverride.js.map