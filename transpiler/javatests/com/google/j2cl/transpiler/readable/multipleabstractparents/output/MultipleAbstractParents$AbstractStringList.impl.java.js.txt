goog.module('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.AbstractStringList$impl');


const AbstractList = goog.require('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.AbstractList$impl');
const IStringList = goog.require('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.IStringList$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @abstract
 * @extends {AbstractList<?string>}
 * @implements {IStringList}
 */
class AbstractStringList extends AbstractList {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_AbstractStringList__() {
    this.$ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_AbstractList__();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    AbstractStringList.$clinit = (() => {});
    AbstractStringList.$loadModules();
    AbstractList.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof AbstractStringList;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AbstractStringList);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    AbstractStringList,
    'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents$AbstractStringList');


IStringList.$markImplementor(AbstractStringList);


exports = AbstractStringList;
//# sourceMappingURL=MultipleAbstractParents$AbstractStringList.js.map