goog.module('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let ArrayList = goog.forwardDeclare('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.ArrayList$impl');
let IStringList = goog.forwardDeclare('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.IStringList$impl');
let StringList = goog.forwardDeclare('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.StringList$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');


class MultipleAbstractParents extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!MultipleAbstractParents}
   * @public
   */
  static $create__() {
    MultipleAbstractParents.$clinit();
    let $instance = new MultipleAbstractParents();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @param {Array<?string>} args
   * @return {void}
   * @public
   */
  static m_main__arrayOf_java_lang_String(args) {
    MultipleAbstractParents.$clinit();
    $Asserts.$assert(j_l_String.m_equals__java_lang_String__java_lang_Object(
        /**@type {!ArrayList<?string>} */ (ArrayList.$create__())
            .m_getFoo__java_lang_Object(null),
        'AbstractCollection'));
    $Asserts.$assert(j_l_String.m_equals__java_lang_String__java_lang_Object(
        StringList.$create__().m_getFoo__java_lang_Object(null),
        'AbstractCollection'));
    $Asserts.$assert(j_l_String.m_equals__java_lang_String__java_lang_Object(
        /**@type {IStringList} */ (StringList.$create__())
            .m_getFoo__java_lang_String(null),
        'AbstractCollection'));
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    MultipleAbstractParents.$clinit = (() => {});
    MultipleAbstractParents.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof MultipleAbstractParents;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, MultipleAbstractParents);
  }

  /**
   * @public
   */
  static $loadModules() {
    ArrayList = goog.module.get(
        'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.ArrayList$impl');
    StringList = goog.module.get(
        'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.StringList$impl');
    j_l_String = goog.module.get('java.lang.String$impl');
    $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
  }
};

$Util.$setClassMetadata(
    MultipleAbstractParents,
    'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents');



exports = MultipleAbstractParents;
//# sourceMappingURL=MultipleAbstractParents.js.map