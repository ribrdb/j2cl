goog.module('com.google.j2cl.transpiler.readable.jsoptional.Main.TemplatedSubtype$impl');


const I = goog.require('com.google.j2cl.transpiler.readable.jsoptional.Main.I$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @template T
 * @implements {I<T>}
 */
class TemplatedSubtype extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @template T
   * @return {!TemplatedSubtype<T>}
   * @public
   */
  static $create__() {
    TemplatedSubtype.$clinit();
    let $instance = new TemplatedSubtype();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsoptional_Main_TemplatedSubtype__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsoptional_Main_TemplatedSubtype__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @param {T} t
   * @param {*} o
   * @return {void}
   * @public
   */
  m_m__java_lang_String__java_lang_Object(t, o) {}

  /**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @param {*=} arg1
   * @return {void}
   * @public
   */
  m(arg0, arg1) {
    this.m_m__java_lang_String__java_lang_Object(
        /**@type {T} */ ($Casts.$to(arg0, j_l_String)), arg1);
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    TemplatedSubtype.$clinit = (() => {});
    TemplatedSubtype.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof TemplatedSubtype;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, TemplatedSubtype);
  }

  /**
   * @public
   */
  static $loadModules() {
    j_l_String = goog.module.get('java.lang.String$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
};

$Util.$setClassMetadata(
    TemplatedSubtype,
    'com.google.j2cl.transpiler.readable.jsoptional.Main$TemplatedSubtype');


I.$markImplementor(TemplatedSubtype);


exports = TemplatedSubtype;
//# sourceMappingURL=Main$TemplatedSubtype.js.map