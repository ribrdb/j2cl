goog.module('com.google.j2cl.transpiler.readable.jsoptional.Main$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Boolean = goog.forwardDeclare('java.lang.Boolean$impl');
let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');


class Main extends j_l_Object {
  /**
   * @param {?string=} a
   * @public
   */
  constructor(a) {
    Main.$clinit();
    super();
    /** @public {?function(?string=, ...*):*} */
    this.f_f__com_google_j2cl_transpiler_readable_jsoptional_Main;
    this.$ctor__com_google_j2cl_transpiler_readable_jsoptional_Main__java_lang_String(
        a);
  }

  /**
   * @param {number} i1
   * @param {?number=} d
   * @param {Integer=} i
   * @return {void}
   * @public
   */
  method1(i1, d, i) {}

  /**
   * @param {?string} s1
   * @param {?number=} d
   * @param {...?boolean} i
   * @return {void}
   * @public
   */
  method2(s1, d, ...i) {
    $Arrays.$stampType(i, Boolean, 1);
  }

  /**
   * @param {?string} a
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsoptional_Main__java_lang_String(
      a) {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_jsoptional_Main();
  }

  /**
   * @param {?function(?string=, ...*):*} f
   * @return {void}
   * @public
   */
  m_testFunction__com_google_j2cl_transpiler_readable_jsoptional_Main_Function(
      f) {}

  /**
   * @param {?function(?string=, ...*):*=} f
   * @return {void}
   * @public
   */
  testOptionalFunction(f) {}

  /**
   * @return {void}
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_jsoptional_Main() {
    this.f_f__com_google_j2cl_transpiler_readable_jsoptional_Main =
        ((/** ?string= */ s, .../** ...* */ varargs) => {
          return s;
        });
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    Main.$clinit = (() => {});
    Main.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Main;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Main);
  }

  /**
   * @public
   */
  static $loadModules() {
    Boolean = goog.module.get('java.lang.Boolean$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  }
};

$Util.$setClassMetadata(
    Main, 'com.google.j2cl.transpiler.readable.jsoptional.Main');



exports = Main;
//# sourceMappingURL=Main.js.map