goog.module('com.google.j2cl.transpiler.readable.simplegenerictype.SimpleGenericType$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');


/**
 * @template T, S
 */
class SimpleGenericType extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {T} */
    this.f_first__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType;
    /** @public {S} */
    this.f_second__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType;
  }

  /**
   * @template T, S
   * @param {T} t
   * @param {S} s
   * @return {!SimpleGenericType<T, S>}
   * @public
   */
  static $create__java_lang_Object__java_lang_Object(t, s) {
    SimpleGenericType.$clinit();
    let $instance = new SimpleGenericType();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType__java_lang_Object__java_lang_Object(
            t, s);
    return $instance;
  }

  /**
   * @param {T} t
   * @param {S} s
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType__java_lang_Object__java_lang_Object(
      t, s) {
    this.$ctor__java_lang_Object__();
    this.f_first__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType =
        t;
    this.f_second__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType =
        s;
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let g = /**@type {!SimpleGenericType<*, Error>} */ (
        SimpleGenericType.$create__java_lang_Object__java_lang_Object(
            j_l_Object.$create__(), Error.$create__()));
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    SimpleGenericType.$clinit = (() => {});
    SimpleGenericType.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof SimpleGenericType;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleGenericType);
  }

  /**
   * @public
   */
  static $loadModules() {
    Error = goog.module.get('java.lang.Error$impl');
  }
};

$Util.$setClassMetadata(
    SimpleGenericType,
    'com.google.j2cl.transpiler.readable.simplegenerictype.SimpleGenericType');



exports = SimpleGenericType;
//# sourceMappingURL=SimpleGenericType.js.map