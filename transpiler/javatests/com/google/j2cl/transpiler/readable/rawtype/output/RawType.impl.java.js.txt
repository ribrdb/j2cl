goog.module('com.google.j2cl.transpiler.readable.rawtype.RawType$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Comparable = goog.forwardDeclare('java.lang.Comparable$impl');


class RawType extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
    /** @public {(Comparable|boolean|number|string)} */
    this.f_c__com_google_j2cl_transpiler_readable_rawtype_RawType;
  }

  /**
   * @return {!RawType}
   * @public
   */
  static $create__() {
    RawType.$clinit();
    let $instance = new RawType();
    $instance.$ctor__com_google_j2cl_transpiler_readable_rawtype_RawType__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_rawtype_RawType__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    RawType.$clinit = (() => {});
    RawType.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof RawType;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, RawType);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    RawType, 'com.google.j2cl.transpiler.readable.rawtype.RawType');



exports = RawType;
//# sourceMappingURL=RawType.js.map