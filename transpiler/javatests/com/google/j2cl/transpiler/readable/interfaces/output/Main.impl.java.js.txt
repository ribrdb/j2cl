goog.module('com.google.j2cl.transpiler.readable.interfaces.Main$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Implementor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.interfaces.Main.Implementor$impl');
let Interface = goog.forwardDeclare('com.google.j2cl.transpiler.readable.interfaces.Main.Interface$impl');


class Main extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!Main}
   * @public
   */
  static $create__() {
    Main.$clinit();
    let $instance = new Main();
    $instance.$ctor__com_google_j2cl_transpiler_readable_interfaces_Main__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_interfaces_Main__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  m_testInterfaceMembers___$pp_com_google_j2cl_transpiler_readable_interfaces() {
    let i =
        Implementor
            .$create__com_google_j2cl_transpiler_readable_interfaces_Main(this);
    i.m_interfaceMethod__();
    i.m_defaultMethod__java_lang_Object(null);
    Interface.m_staticInterfaceMethod__();
    let x =
        (Implementor
             .$create__com_google_j2cl_transpiler_readable_interfaces_Main(
                 this),
         Interface
             .f_a__com_google_j2cl_transpiler_readable_interfaces_Main_Interface) +
        Interface
            .f_b__com_google_j2cl_transpiler_readable_interfaces_Main_Interface;
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    Main.$clinit = (() => {});
    Main.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Main;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Main);
  }

  /**
   * @public
   */
  static $loadModules() {
    Implementor = goog.module.get(
        'com.google.j2cl.transpiler.readable.interfaces.Main.Implementor$impl');
    Interface = goog.module.get(
        'com.google.j2cl.transpiler.readable.interfaces.Main.Interface$impl');
  }
};

$Util.$setClassMetadata(
    Main, 'com.google.j2cl.transpiler.readable.interfaces.Main');



exports = Main;
//# sourceMappingURL=Main.js.map