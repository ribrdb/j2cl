goog.module('com.google.j2cl.transpiler.readable.foreachstatement.ForEachStatement$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Iterable = goog.forwardDeclare('java.lang.Iterable$impl');
let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


class ForEachStatement extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @return {!ForEachStatement}
   * @public
   */
  static $create__() {
    ForEachStatement.$clinit();
    let $instance = new ForEachStatement();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_foreachstatement_ForEachStatement__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_foreachstatement_ForEachStatement__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @param {Iterable<Throwable>} iterable
   * @return {void}
   * @public
   */
  m_test__java_lang_Iterable(iterable) {
    for (let $iterator = iterable.m_iterator__(); $iterator.m_hasNext__();) {
      let t =
          /**@type {Throwable} */ ($Casts.$to($iterator.m_next__(), Throwable));
      t.toString();
    }
    for (let $array = /**@type {!Array<Throwable>} */ (
                 $Arrays.$create([10], Throwable)),
             $index = 0;
         $index < $array.length; $index++) {
      let t_1 = $array[$index];
      t_1.toString();
    }
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    ForEachStatement.$clinit = (() => {});
    ForEachStatement.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof ForEachStatement;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, ForEachStatement);
  }

  /**
   * @public
   */
  static $loadModules() {
    Throwable = goog.module.get('java.lang.Throwable$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
};

$Util.$setClassMetadata(
    ForEachStatement,
    'com.google.j2cl.transpiler.readable.foreachstatement.ForEachStatement');



exports = ForEachStatement;
//# sourceMappingURL=ForEachStatement.js.map