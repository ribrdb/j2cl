goog.module('com.google.j2cl.transpiler.readable.inferreturn.InferReturn$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let ArrayList = goog.forwardDeclare('java.util.ArrayList$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');


/**
 * @template T
 */
class InferReturn extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @template T
   * @return {!InferReturn<T>}
   * @public
   */
  static $create__() {
    InferReturn.$clinit();
    let $instance = new InferReturn();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_inferreturn_InferReturn__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_inferreturn_InferReturn__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @template T_1
   * @param {T_1} foo
   * @return {InferReturn<T_1>}
   * @public
   */
  static m_inferGeneric__java_lang_Object(foo) {
    InferReturn.$clinit();
    return /**@type {!InferReturn<T_1>} */ (InferReturn.$create__());
  }

  /**
   * @param {InferReturn<?string>} foo
   * @return {InferReturn<InferReturn<?string>>}
   * @public
   */
  static m_tightenType__com_google_j2cl_transpiler_readable_inferreturn_InferReturn(
      foo) {
    InferReturn.$clinit();
    if (!$Equality.$same(foo, null)) {
      return /**@type {InferReturn<InferReturn<?string>>} */ (
          InferReturn.m_inferGeneric__java_lang_Object(foo));
    }
    return null;
  }

  /**
   * @return {void}
   * @public
   */
  static m_main__() {
    InferReturn.$clinit();
    let list = /**@type {ArrayList<*>} */ (
        InferReturn.m_newArrayList__java_lang_Object('foo'));
    InferReturn.m_acceptsArrayListOfObject__java_util_ArrayList(list);
    let array = InferReturn.m_newArray__java_lang_Object('foo');
    InferReturn.m_acceptsArrayOfObject__arrayOf_java_lang_Object(array);
  }

  /**
   * @template V
   * @param {V} foo
   * @return {ArrayList<V>}
   * @public
   */
  static m_newArrayList__java_lang_Object(foo) {
    InferReturn.$clinit();
    return /**@type {!ArrayList<V>} */ (ArrayList.$create__());
  }

  /**
   * @template V
   * @param {V} foo
   * @return {Array<V>}
   * @public
   */
  static m_newArray__java_lang_Object(foo) {
    InferReturn.$clinit();
    return /**@type {Array<V>} */ (new Array(0));
  }

  /**
   * @param {ArrayList<*>} foo
   * @return {void}
   * @public
   */
  static m_acceptsArrayListOfObject__java_util_ArrayList(foo) {
    InferReturn.$clinit();
  }

  /**
   * @param {Array<*>} foo
   * @return {void}
   * @public
   */
  static m_acceptsArrayOfObject__arrayOf_java_lang_Object(foo) {
    InferReturn.$clinit();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    InferReturn.$clinit = (() => {});
    InferReturn.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof InferReturn;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, InferReturn);
  }

  /**
   * @public
   */
  static $loadModules() {
    ArrayList = goog.module.get('java.util.ArrayList$impl');
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
  }
};

$Util.$setClassMetadata(
    InferReturn, 'com.google.j2cl.transpiler.readable.inferreturn.InferReturn');



exports = InferReturn;
//# sourceMappingURL=InferReturn.js.map