goog.module('com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType$impl');


const RegularType = goog.require('com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass.RegularType$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_Object = goog.forwardDeclare('java.lang.Object$impl');


class JsConstructorSubtypeOfRegularType extends RegularType {
  /**
   * JsConstructor 'JsConstructorSubtypeOfRegularType(Object)'.
   * @param {*} object
   * @public
   */
  constructor(object) {
    JsConstructorSubtypeOfRegularType.$clinit();
    super();
    this.$ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType__java_lang_Object(
        object);
  }

  /**
   * Initialization from constructor
   * 'JsConstructorSubtypeOfRegularType(Object)'.
   * @param {*} object
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType__java_lang_Object(
      object) {
    this.$ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_RegularType__java_lang_Object(
        object);
  }

  /**
   * Factory method corresponding to constructor
   * 'JsConstructorSubtypeOfRegularType()'.
   * @return {!JsConstructorSubtypeOfRegularType}
   * @public
   */
  static $create__() {
    JsConstructorSubtypeOfRegularType.$clinit();
    let $instance =
        new JsConstructorSubtypeOfRegularType(j_l_Object.$create__());
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType__();
    return $instance;
  }

  /**
   * Initialization from constructor 'JsConstructorSubtypeOfRegularType()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType__() {
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    JsConstructorSubtypeOfRegularType.$clinit = (() => {});
    JsConstructorSubtypeOfRegularType.$loadModules();
    RegularType.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof JsConstructorSubtypeOfRegularType;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor, JsConstructorSubtypeOfRegularType);
  }

  /**
   * @public
   */
  static $loadModules() {
    j_l_Object = goog.module.get('java.lang.Object$impl');
  }
};

$Util.$setClassMetadata(
    JsConstructorSubtypeOfRegularType,
    'com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass$JsConstructorSubtypeOfRegularType');



exports = JsConstructorSubtypeOfRegularType;
//# sourceMappingURL=JsConstructorClass$JsConstructorSubtypeOfRegularType.js.map