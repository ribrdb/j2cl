goog.module('com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass.F$impl');


const C = goog.require('com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass.C$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


class F extends C {
  /**
   * @param {number} x
   * @public
   */
  constructor(x) {
    F.$clinit();
    super(x + 2);
    /** @public {number} */
    this.f_fF__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_F =
        0;
    this.$ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_F__int(
        x);
  }

  /**
   * @param {number} x
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_F__int(
      x) {
    this.$init__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_F();
    this.f_fF__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_F =
        x + 3;
  }

  /**
   * @return {void}
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_F() {
    this.f_fF__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_F =
        13;
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    F.$clinit = (() => {});
    F.$loadModules();
    C.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof F;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, F);
  }

  /**
   * @public
   */
  static $loadModules() {}
};

$Util.$setClassMetadata(
    F,
    'com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass$F');



exports = F;
//# sourceMappingURL=JsConstructorClass$F.js.map