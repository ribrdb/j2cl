goog.module('com.google.j2cl.transpiler.readable.collisions.T$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Number = goog.forwardDeclare('java.lang.Number$impl');
let $Numbers = goog.forwardDeclare('vmbootstrap.Numbers$impl');


/**
 * @template T_1
 */
class T extends j_l_Object {
  /**
   * @protected
   */
  constructor() {
    super();
  }

  /**
   * @template T_1
   * @return {!T<T_1>}
   * @public
   */
  static $create__() {
    T.$clinit();
    let $instance = new T();
    $instance.$ctor__com_google_j2cl_transpiler_readable_collisions_T__();
    return $instance;
  }

  /**
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_collisions_T__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {T_1}
   * @public
   */
  m_m___$pp_com_google_j2cl_transpiler_readable_collisions() {
    return null;
  }

  /**
   * @return {T_1}
   * @public
   */
  m_n___$pp_com_google_j2cl_transpiler_readable_collisions() {
    let t = /**@type {!T<T_1>} */ (T.$create__())
                .m_m___$pp_com_google_j2cl_transpiler_readable_collisions();
    $Numbers.m_byteValue__java_lang_Number(t);
    return t;
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    T.$clinit = (() => {});
    T.$loadModules();
    j_l_Object.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof T;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, T);
  }

  /**
   * @public
   */
  static $loadModules() {
    $Numbers = goog.module.get('vmbootstrap.Numbers$impl');
  }
};

$Util.$setClassMetadata(T, 'com.google.j2cl.transpiler.readable.collisions.T');



exports = T;
//# sourceMappingURL=T.js.map